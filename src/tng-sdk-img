#!/bin/bash

# Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO
# ALL RIGHTS RESERVED.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Neither the name of the SONATA-NFV, 5GTANGO
# nor the names of its contributors may be used to endorse or promote
# products derived from this software without specific prior written
# permission.

# This work has been performed in the framework of the SONATA project,
# funded by the European Commission under Grant number 671517 through
# the Horizon 2020 and 5G-PPP programmes. The authors would like to
# acknowledge the contributions of their colleagues of the SONATA
# partner consortium (www.sonata-nfv.eu).

# This work has been performed in the framework of the 5GTANGO project,
# funded by the European Commission under Grant number 761493 through
# the Horizon 2020 and 5G-PPP programmes. The authors would like to
# acknowledge the contributions of their colleagues of the 5GTANGO
# partner consortium (www.5gtango.eu).

EXEC="tng-sdk-img"
VERSION=0.1
APP_DIR="$HOME/.local/share/tng-sdk-img"
TOOLS=$(ls "${APP_DIR}" 2> /dev/null)

function print_help() {
  echo "Usage:"
  echo -e "\t${EXEC} TOOL_NAME [OPTIONS]"
  echo -e "\t${EXEC} -h, --help    \t\tShow this message"
  echo -e "\t${EXEC} -t, --tools   \t\tList available tools"
  echo -e "\t${EXEC} -v, --version \t\tPrint version"
}

function print_tools() {
  if [[ -z "${TOOLS}" ]]; then
    print_install_error
  else
    echo "Available tools:"
    echo "${TOOLS}"
  fi
}

function print_version() {
  echo "${VERSION}"
}

function print_install_error() {
  echo "ERROR: Can't find the directory with tools."
  echo "The directory is expected to be in ${APP_DIR}."
  echo "Try to reinstall the application or write to author."
}

function run_tool() {
  local tool_name="${1}"
  local tool="${APP_DIR}/${tool_name}/${tool_name}"
  
  if [[ ! -f "${tool}" ]]; then
    echo "ERROR: The tool \"${tool_name}\" is not found."
    exit 1
  fi
  
  shift
  exec "${tool}" "${@}"
}

function main() {
  if [[ ! -d "${APP_DIR}" ]]; then
    print_install_error
    exit 1
  fi
  
  if [[ "${#}" -lt 1 ]]; then
    echo "ERROR: Missing parameters."
    print_help
    exit 1
  fi
  
  while [[ "${#}" -gt 0 ]]; do
    case ${1} in
      -h|--help)
        print_help
        exit 0
        ;;
      -v|--version)
        print_version
        exit 0
        ;;
      -t|--tools)
        print_tools
        exit 0
        ;;
      -*|--*)
        die "ERROR: Unknown argument '${1}'"
        ;;
      *)
        run_tool "${@}"
        ;;
    esac
  done
}

main "${@}"
